<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fb.xujimanage.dao.MenuDao">

    <resultMap id="MenuMap" type="com.fb.xujimanage.entity.Menu">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="content" property="content"/>
        <result column="taste_dicvalueid" property="tasteDicvalueid"/>
        <result column="price" property="price"/>
        <result column="del_flag" property="delFlag"/>
        <result column="create_by" property="createBy"/>
        <result column="update_by" property="updateBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="sort_num" property="sortNum"/>
        <result column="remarks" property="remarks"/>
        <result column="person_dicvalueid" property="personDicvalueid"/>
        <result column="budget_id" property="budgetId"/>
        <!--门店和菜单一对多查询-->
        <collection property="restaurants" ofType="com.fb.xujimanage.entity.Restaurant" resultMap="restaurantMap"/>
    </resultMap>
    <resultMap id="restaurantMap" type="com.fb.xujimanage.entity.Restaurant">
        <id property="id" column="reid"/>
        <result property="restaurantName" column="restaurant_name"/>
        <result property="address" column="address"/>
        <result property="city" column="city"/>
        <result property="area" column="area"/>
    </resultMap>

    <sql id="Base_Column_List">
        `id`,
        `name`,
        `content`,
        `taste_dicvalueid`,
        `price`,
        `del_flag`,
        `create_by`,
        `update_by`,
        `create_time`,
        `update_time`,
        `sort_num`,
        `remarks`,
        `person_dicvalueid`,
        `budget_id`
    </sql>

    <insert id="insert" keyProperty="id" parameterType="com.fb.xujimanage.entity.Menu">
        INSERT INTO menu (
            `id`,
            `name`,
            `content`,
            `taste_dicvalueid`,
            `price`,
            `del_flag`,
            `create_by`,
            `update_by`,
            `create_time`,
            `update_time`,
            `sort_num`,
            `remarks`,
            `person_dicvalueid`,
            `budget_id`
        )
        VALUES(
            #{id},
            #{name},
            #{content},
            #{tasteDicvalueid},
            #{price},
            #{delFlag},
            #{createBy},
            #{updateBy},
            #{createTime},
            #{updateTime},
            #{sortNum},
            #{remarks},
            #{personDicvalueid},
            #{budgetId}
        )
    </insert>

    <delete id="delete" parameterType="java.util.Map">
        DELETE FROM menu
        WHERE `id` = #{id}
    </delete>

    <update id="update" parameterType="com.fb.xujimanage.entity.Menu">
        UPDATE menu
        SET
        id = #{id},
        <if test="name !=null and name !=''">
            name = #{name},
        </if>
        content = #{content},
        taste_dicvalueid = #{tasteDicvalueid},
        price = #{price},
        del_flag = #{delFlag},
        create_by = #{createBy},
        update_by = #{updateBy},
        create_time = #{createTime},
        update_time = #{updateTime},
        sort_num = #{sortNum},
        budget_id = #{budgetId},
        remarks = #{remarks},
        person_dicvalueid = #{personDicvalueid}
        WHERE `id` = #{id}
    </update>


    <select id="load" parameterType="java.util.Map" resultMap="MenuMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM menu
        WHERE `id` = #{id}
    </select>

    <select id="queryMenu" resultType="com.fb.xujimanage.entity.Menu">
        SELECT m.* from menu m inner join restaurant_menu_relate r on m.id = r.menu_id
        <where>
            <if test="tasteDicvalueid !=null">
                m.taste_dicvalueid = #{tasteDicvalueid}
            </if>
            <if test="personDicvalueid !=null">
                and m.person_dicvalueid = #{personDicvalueid}
            </if>
            <if test="budgetId !=null and budgetId !=''">
                and m.budget_id = #{budgetId}
            </if>
            <if test="restaurantIds !=null and restaurantIds.length >0">
                and r.restaurant_id in
                <foreach collection="restaurantIds" index="index" item="restaurantId" open="(" separator="," close=")">
                    #{restaurantId}
                </foreach>
            </if>
        </where>
    </select>

    <select id="pageList" parameterType="java.util.Map" resultMap="MenuMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM menu
        LIMIT #{offset}, #{pagesize}
    </select>

    <select id="pageListCount" parameterType="java.util.Map" resultType="int">
        SELECT count(1)
        FROM menu
    </select>

    <select id="loadAllByName" resultMap="MenuMap">
        SELECT
        me.id,
        me.name,
        me.content,
        me.price,
        me.person_dicvalueid,
        me.taste_dicvalueid,
        me.budget_id
        FROM
        menu me
        inner JOIN restaurant_menu_relate rm ON me.id = rm.menu_id
        WHERE
        me.name = #{name}
        and me.del_flag = 0 and rm.restaurant_id in
        <foreach collection="restaurantIds" index="index" item="restaurantId" open="(" separator="," close=")">
            #{restaurantId}
        </foreach>

    </select>

    <select id="loadAllById" resultMap="MenuMap">
        SELECT
        me.id,
        me.name,
        me.content,
        me.price,
        me.person_dicvalueid,
        me.taste_dicvalueid,
        me.budget_id,
        re.`name` restaurantName,
        re.address
    FROM
        menu me
        LEFT JOIN restaurant_menu_relate rm ON me.id = rm.menu_id
        LEFT JOIN restaurant re ON rm.restaurant_id = re.id AND re.del_flag = 0
    WHERE
        me.del_flag = 0
        AND me.id = #{id}
    </select>

    <select id="loadAll" resultMap="MenuMap">
        SELECT
        me.id,
        me.`name`,
        me.content,
        me.price,
        me.person_dicvalueid,
        me.taste_dicvalueid,
        me.budget_id,
        re.restaurant_name,
        re.address,
        re.city,
        re.area,
        re.id AS reid
        FROM
        (
        SELECT
        id,
        `name`,
        content,
        price,
        person_dicvalueid,
        taste_dicvalueid,
        budget_id,
        create_time
        FROM
        menu
        WHERE
        del_flag = 0
        <if test="menuName != null and menuName != '' ">
            AND `name` LIKE concat('%',#{menuName},'%')
        </if>
        ORDER BY create_time DESC
        LIMIT #{currentPage},#{pageSize} ) me
        LEFT JOIN restaurant_menu_relate rm ON me.id = rm.menu_id
        LEFT JOIN restaurant re ON rm.restaurant_id = re.id
        AND re.del_flag = 0
    </select>
    <select id="getMenuTotal" resultType="int">
        SELECT
        COUNT(id)
        FROM
        menu
        WHERE
        del_flag = 0
        <if test="menuName != null and menuName != '' ">
            AND `name` LIKE concat('%',#{menuName},'%')
        </if>
    </select>
</mapper>
